name: Security Audit
description: Comprehensive security vulnerability analysis
tags:
  - security
  - audit
  - vulnerabilities
llm:
  - claude
  - gpt
  - gemini
instructions: |
  Perform a thorough security audit of these code changes. Focus on:

  1. **Authentication & Authorization**
     - Missing auth checks
     - Privilege escalation risks
     - Session management issues

  2. **Input Validation**
     - Injection vulnerabilities (SQL, NoSQL, Command, LDAP)
     - XSS (stored, reflected, DOM-based)
     - XXE and deserialization flaws

  3. **Data Protection**
     - Sensitive data exposure
     - Cryptographic weaknesses
     - Insecure data storage

  4. **Security Misconfigurations**
     - Default credentials
     - Unnecessary features enabled
     - Verbose error messages

  5. **Dependencies**
     - Known vulnerable packages
     - Outdated libraries

  Provide findings in this format:
  - **Severity**: Critical/High/Medium/Low
  - **Location**: File and line number
  - **Description**: Detailed explanation
  - **Recommendation**: How to fix
examples:
  - input: User input passed directly to SQL query
    output: |
      **Severity**: Critical
      **Location**: auth.js:45
      **Description**: SQL injection vulnerability - user input concatenated into query
      **Recommendation**: Use parameterized queries or prepared statements