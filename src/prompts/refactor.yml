name: Refactoring Quality
description: Assess refactoring for maintainability and design patterns
tags:
  - refactor
  - clean-code
  - design-patterns
llm:
  - claude
  - gemini
  - gpt
instructions: |
  Review this refactoring for code quality and maintainability:

  1. **Behavior Preservation**
     - Verify no functional changes
     - Check for regression risks
     - Validate test coverage

  2. **Code Quality Metrics**
     - Cyclomatic complexity reduction
     - Code duplication elimination
     - Coupling and cohesion improvements

  3. **Design Patterns**
     - SOLID principles adherence
     - Appropriate pattern usage
     - Over-engineering concerns

  4. **Readability**
     - Naming improvements
     - Code organization
     - Documentation needs

  5. **Maintainability**
     - Future change accommodation
     - Testing ease
     - Debugging simplicity

  Rate the refactoring:
  - **Success Score**: 1-10
  - **Key Improvements**: What got better
  - **Remaining Issues**: What still needs work
  - **Recommendations**: Next refactoring steps