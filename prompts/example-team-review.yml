# Example custom prompt template for team-specific code review
# Place this file in your project's prompts/ directory

name: Team Code Review
description: Our team's specific code review guidelines
extends: base-review  # Inherit from built-in base-review template
tags:
  - team
  - custom
  - review
llm:
  - claude
  - gpt
instructions: |
  Perform a comprehensive code review following our team standards:

  ## 1. Architecture & Design
  - Does this follow our microservices patterns?
  - Are domain boundaries respected?
  - Is the code in the right service/module?
  
  ## 2. Our Coding Standards
  - TypeScript strict mode compliance
  - Proper error handling with our custom ErrorTypes
  - Logging using our centralized logger
  - Feature flags for new functionality
  
  ## 3. Database & Performance
  - Are database queries optimized?
  - Proper use of our caching layer
  - No N+1 query problems
  - Appropriate indexes defined
  
  ## 4. Security Requirements
  - Authentication using our OAuth2 middleware
  - Proper authorization checks
  - Input validation with our validation library
  - No PII in logs
  
  ## 5. Testing Standards
  - Unit tests with >80% coverage
  - Integration tests for API endpoints
  - E2E tests for critical user flows
  - Performance tests for heavy operations

  Format your review as:
  - ✅ **Good**: What was done well
  - ⚠️ **Concern**: Issues that need addressing
  - 💡 **Suggestion**: Improvements to consider
  - 🚫 **Blocker**: Must fix before merge

# Variables can be used for dynamic content
variables:
  team_name: Engineering Team
  min_coverage: "80"
  
# Examples help LLMs understand the expected output format
examples:
  - input: "New API endpoint without authentication"
    output: |
      🚫 **Blocker**: Missing authentication
      **Location**: api/users.ts:45
      **Issue**: The POST /users/profile endpoint lacks authentication middleware
      **Fix**: Add `authMiddleware` to the route: `router.post('/profile', authMiddleware, updateProfile)`