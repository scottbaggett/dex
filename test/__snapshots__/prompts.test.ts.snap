// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`PromptGenerator > generate > should add format hint for Grok 1`] = `"Review this focused change for:\\n\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices\\n\\nProvide structured JSON output with: summary, issues[], suggestions[]"`;

exports[`PromptGenerator > generate > should generate contextual prompt for large changes 1`] = `"Review this substantial changeset for:\\n\\n\\nJavaScript-specific considerations:\\n- Type coercion issues\\n- Async error handling\\n- ES6+ feature compatibility\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should generate contextual prompt for small changes 1`] = `"Review this focused change for:\\n\\n- Test coverage and quality\\n- Whether tests properly validate the implementation\\n\\nJavaScript-specific considerations:\\n- Type coercion issues\\n- Async error handling\\n- ES6+ feature compatibility\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should handle config file changes 1`] = `"Review this focused change for:\\n\\n- Configuration changes and their impact\\n- Environment compatibility\\n\\nJavaScript-specific considerations:\\n- Type coercion issues\\n- Async error handling\\n- ES6+ feature compatibility\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should handle mixed file types 1`] = `"Review these changes for:\\n\\n- Documentation accuracy and completeness\\n- Whether docs match the implementation\\n\\nJavaScript-specific considerations:\\n- Type coercion issues\\n- Async error handling\\n- ES6+ feature compatibility\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should handle test file changes 1`] = `"Review these changes for:\\n\\n- Test coverage and quality\\n- Whether tests properly validate the implementation\\n\\nTypeScript-specific considerations:\\n- Type safety and any usage\\n- Null/undefined handling\\n- Async/await error handling\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should include language-specific concerns for React 1`] = `"Review these changes for:\\n\\n\\nReact/TypeScript-specific considerations:\\n- React hooks dependencies\\n- Component re-rendering performance\\n- Props validation\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should include language-specific concerns for TypeScript 1`] = `"Review these changes for:\\n\\n\\nTypeScript-specific considerations:\\n- Type safety and any usage\\n- Null/undefined handling\\n- Async/await error handling\\n\\nCore review points:\\n- Code correctness and logic errors\\n- Security vulnerabilities\\n- Performance implications\\n- Code style and best practices"`;

exports[`PromptGenerator > generate > should include task context when provided 1`] = `"Review these changes in the context of: "Fix authentication bug in login flow"\\n\\nPlease analyze:\\n1. Whether the changes properly address the task\\n2. Any missing implementations or edge cases\\n3. Potential side effects or breaking changes"`;

exports[`PromptGenerator > generate > should use prompt template when specified 1`] = `
"Perform a thorough security audit of these code changes. Focus on:

1. **Authentication & Authorization**
   - Missing auth checks
   - Privilege escalation risks
   - Session management issues

2. **Input Validation**
   - Injection vulnerabilities (SQL, NoSQL, Command, LDAP)
   - XSS (stored, reflected, DOM-based)
   - XXE and deserialization flaws

3. **Data Protection**
   - Sensitive data exposure
   - Cryptographic weaknesses
   - Insecure data storage

4. **Security Misconfigurations**
   - Default credentials
   - Unnecessary features enabled
   - Verbose error messages

5. **Dependencies**
   - Known vulnerable packages
   - Outdated libraries

Provide findings in this format:
- **Severity**: Critical/High/Medium/Low
- **Location**: File and line number
- **Description**: Detailed explanation
- **Recommendation**: How to fix
"
`;
